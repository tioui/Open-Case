note
	description: "EiffelVision Widget LAYOUT_DIAGRAM.%
		%The original version of this class was generated by EiffelBuild."
	generator: "EiffelBuild"
	date: "$Date: 2010-12-22 10:39:24 -0800 (Wed, 22 Dec 2010) $"
	revision: "$Revision: 85202 $"

class
	LAYOUT_DIAGRAM

inherit
	LAYOUT_DIAGRAM_IMP


feature {NONE} -- Initialization

	user_create_interface_objects
			-- Create any auxilliary objects needed for MAIN_WINDOW.
			-- Initialization for these objects must be performed in `user_initialization'.
		do
				-- Create attached types defined in class here, initialize them in `user_initialization'.
				create l_diagram.make (da_diagram)
				create l_figures.make (da_figures)
		end

	user_initialization
			-- Perform any initialization on objects created by `user_create_interface_objects'
			-- and from within current class itself.
		local
			l_case1,l_case2:CASE_FIGURE
			point_a,point_b: EV_RELATIVE_POINT
		do
			l_diagram.multi_selection_enabled_action.extend (agent bt_multi.enable_select)
			l_diagram.multi_selection_disabled_action.extend (agent bt_multi.disable_select)
			l_diagram.enable_grid
			bt_grid.enable_select
			l_diagram.disable_snapping
			bt_snap.disable_select
			create point_a.make_with_position (100, 50)
			create l_case1.make_from_point_with_dimension_and_text (point_a, 200, 100, "Coucou tout le monde, comment ça va ce matin?")
			create point_b.make_with_position (200, 50)
			create l_case2.make_from_point_with_dimension_and_text (point_b, 200, 100, "Allo")
			l_diagram.add_figure (l_case1)
			l_diagram.add_figure (l_case2)
		end

feature {NONE} -- Implementation

	l_diagram:DIAGRAM_PANEL
	l_figures:FIGURES_PANEL

	bt_grid_select
			-- Called by `select_actions' of `bt_grid'.
		do
			if bt_grid.is_selected then
				l_diagram.enable_grid
				bt_snap.enable_select
				bt_snap.enable_sensitive
			else
				l_diagram.disable_grid
				bt_snap.disable_select
				bt_snap.disable_sensitive
			end

		end

	bt_snap_select
			-- Called by `select_actions' of `bt_snap'.
		do
			if bt_snap.is_selected then
				l_diagram.enable_snapping
			else
				l_diagram.disable_snapping
			end
		end

	bt_multi_select
		-- Called by `select_actions' of `bt_multi'.
		do
			if bt_multi.is_selected then
				l_diagram.enable_multi_selection
			else
				l_diagram.disable_multi_selection
			end
		end


	b_test_select
			-- Called by `select_actions' of `b_text'.
		do

		end



end
